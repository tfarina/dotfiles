! URxvt configuration

! >>> Colors {{{
! ==============

! Color scheme
! -------------

! RGB table
! ----------

! black         = 0, 0, 0
! red           = 128, 0, 0
! green         = 0, 128, 0
! yellow        = 128, 128, 0
! blue          = 0, 0, 128
! magenta       = 128, 0, 128
! cyan          = 0, 128, 128
! white         = 192, 192, 192
! brightBlack   = 128, 128, 128
! brightRed     = 255, 0, 0
! brightGreen   = 0, 255, 0
! brightYellow  = 255, 255, 0
! brightBlue    = 0, 0, 255
! brightMagenta = 255, 0, 255
! brightCyan    = 0, 255, 255
! brightWhite   = 255, 255, 255

#define BLACK          #000000
#define RED            #800000
#define GREEN          #008000
#define YELLOW         #808000
#define BLUE           #000080
#define MAGENTA        #800080
#define CYAN           #008080
#define WHITE          #C0C0C0
#define BRIGHT_BLACK   #808080
#define BRIGHT_RED     #FF0000
#define BRIGHT_GREEN   #00FF00
#define BRIGHT_YELLOW  #FFFF00
#define BRIGHT_BLUE    #0000FF
#define BRIGHT_MAGENTA #FF00FF
#define BRIGHT_CYAN    #00FFFF
#define BRIGHT_WHITE   #FFFFFF

URxvt.foreground: BLACK
URxvt.background: BRIGHT_WHITE
URxvt.cursorColor: BLACK

! ANSI colors
! -----------

URxvt.color0:  BLACK
URxvt.color1:  RED
URxvt.color2:  GREEN
URxvt.color3:  YELLOW
URxvt.color4:  BLUE
URxvt.color5:  MAGENTA
URxvt.color6:  CYAN
URxvt.color7:  WHITE
URxvt.color8:  BRIGHT_BLACK
URxvt.color9:  BRIGHT_RED
URxvt.color10: BRIGHT_GREEN
URxvt.color11: BRIGHT_YELLOW
URxvt.color12: BRIGHT_BLUE
URxvt.color13: BRIGHT_MAGENTA
URxvt.color14: BRIGHT_CYAN
URxvt.color15: BRIGHT_WHITE

! Specifies the color of the scrollbar slider (also called the thumb).
! Accepts: color
! Default value: #B2B2B2
URxvt.scrollColor: #B2B2B2

! Specifies the color for the trough area of the scrollbar.
! Accepts: color
! Default value: #969696
URxvt.troughColor: #969696

! Specifies the colour of the border around the text area and between the
! scrollbar and the text.
! Accepts: color in hex format: "#rgb" or "#rrggbb" or "rgb:rr/gg/bb"
! Default value:
! If unset, it uses the background color.
URxvt.borderColor: BRIGHT_WHITE

! Sets the foreground color for bold text.
! Accepts: color name or #rrggbb
! Default value: color1 (usually bright red, but depends on theme)
!URxvt.colorBD:

! Sets the foreground color for italic text.
! Accepts: color name or #rrggbb
! Default value: foreground
!URxvt.colorIT:

! Sets the foreground color for underlined text.
! Accepts: color name or #rrggbb
! Default value: foreground
!URxvt.colorUL:

! Sets the foreground color of reversed video text in urxvt.
! Reversed video swaps the foreground and background colors of text.
! Accepts: color name or hexadecimal RGB value
! Default value: none (inherits terminal foreground)
!URxvt.colorRV:

! Sets the color used for drawing the underline itself (instead of the text).
! Useful for distinguishing underline from text color.
! Accepts: color name or #rrggbb
! Default value: colorUL (falls back to foreground if not set)
!URxvt.underlineColor:

! Sets the background color of the text cursor when it is inactive
! or unfocused. Useful when cursorColor is too bright or similar
! to the text color.
! Accepts: color name or #RGB / #RRGGBB / #RRRRGGGGBBBB format
! Default value: none (cursor uses cursorColor)
!URxvt.cursorColor2:

! Sets the primary color of the mouse pointer (cursor).
! Accepts: color name or #RGB / #RRGGBB / #RRRRGGGGBBBB format
! Default value: black
!URxvt.pointerColor:

! Sets the secondary color of the mouse pointer (cursor).
! This color is typically used for contrast or as an outline.
! Accepts: color name or #RGB / #RRGGBB / #RRRRGGGGBBBB format
! Default value: white
!URxvt.pointerColor2:

! Sets the background color used when text is highlighted (selected).
! Accepts: color name or #RGB / #RRGGBB / #RRRRGGGGBBBB format
! Default value: reverse video of text and background colors
!URxvt.highlightColor:

! Sets the text color used when text is highlighted (selected).
! Accepts: color name or hexadecimal RGB value
! Default value: reverse video of text and background colors
!URxvt.highlightTextColor:

! Sets the background color of inactive tabs.
! Has no effect unless the “tabbed” Perl extension is enabled
! through the “perl-ext-common” resource.
! Accepts: color name or hexadecimal RGB value
! Default value: none (inherits terminal background)
!URxvt.tab-bg:

! Sets the foreground (text) color of inactive tabs.
! Only applies if the “tabbed” Perl extension is enabled
! via the “perl-ext-common” resource.
! Accepts: color name or hexadecimal RGB value
! Default value: none (inherits terminal foreground)
!URxvt.tab-fg:

! Sets the background color of the tab bar.
! This defines the color behind all tab buttons. Has no effect
! unless the “tabbed” Perl extension is enabled through the
! “perl-ext-common” resource.
! Accepts: color name or hexadecimal RGB value
! Default value: none (inherits terminal background)
!URxvt.tabbar-bg:

! Sets the foreground (text) color of the tab bar.
! Only takes effect when the “tabbed” Perl extension is active
! and listed in “perl-ext-common”.
! Accepts: color name or hexadecimal RGB value
! Default value: none (inherits terminal foreground)
!URxvt.tabbar-fg:

! <<< Colors }}}

! >>> Fonts {{{
! =============

! Select the fonts to be used. This is a comma separated list of font names.
! Accepts: fontname
URxvt.font:           xft:Ubuntu Mono:size=12:style=Regular

! The font list to use for displaying bold characters.
! Accepts: fontname
URxvt.boldFont:       xft:Ubuntu Mono:size=12:style=Bold:weight=bold

! The font list to use for displaying italic characters.
! Accepts: fontname
URxvt.italicFont:     xft:Ubuntu Mono:size=12:style=Italic:slant=italic

! The font list to use for displaying bold italic characters.
! Accepts: fontname
URxvt.boldItalicFont: xft:Ubuntu Mono:size=12:style=Bold Italic:weight=bold:slant=italic

! Specifies the font to be used for input method (IM) pre-edit text.
! This option allows a separate font to be chosen for text entered
! through input methods, independent of the main terminal font.
! Accepts: Xft font string
! Default value: none (falls back to main font)
!URxvt.imFont:

! Disables urxvt’s internal fallback glyphs for box-drawing and pseudographic
! characters.
! Uses only the glyphs provided by the selected font, ensuring consistent
! appearance.
! If you want to use urxvt built-in bitmap font fallback glyphs, then set this
! to false.
! Accepts: boolean
! Default value: false
URxvt.skipBuiltinGlyphs: true

! Controls how bold and italic text is displayed.
! When enabled, urxvt uses separate font styles for bold and italic; when
! disabled, it uses color instead.
! Useful for making emphasis (bold/italic) visually distinct or consistent
! with the regular font.
! Accepts: boolean
! Default value: true
URxvt.intensityStyles: true

! Specifies the number of lines (extra pixels) to insert between the lines
! of text.
! Can improve readability or adjust appearance for certain fonts.
! Negative values are allowed and reduce the spacing between lines.
! Accepts: number
! Default value: 0
URxvt.lineSpace: 0

! Specifies the number of extra dots (space) between columns (two characters).
! Accepts: number
! Default value: 0
! https://wiki.archlinux.org/index.php/Rxvt-unicode#Font_spacing
URxvt.letterSpace: 0

! <<< Fonts }}}

! >>> Window & Borders {{{
! ==================

! Sets the path to an image file used as the icon for the terminal window.
! Useful for customizing the appearance of the terminal in window managers
! or taskbars.
! Accepts: file
! Has no default value; if unset, the window manager or desktop environment
! provides the icon.
URxvt.iconFile: /usr/share/pixmaps/urxvt_32x32.xpm

! Window title (-T still respected); the default title is the basename of
! the program specified after the -e option, if any, otherwise the
! application name.
! Accepts: string
!URxvt.title:

! Set the name used to label the icon of the window or displayed in an icon
! manager window. The default name is the basename of the program.
! Accepts: string
!URxvt.iconName:

! Specifies the number of lines the scrollback buffer will retain
! above the visible window.
! Accepts: number
! Default value: 64
URxvt.saveLines: 64

! Enables or disables double-buffering to reduce flicker when updating
! the terminal display. It controls how the terminal handles drawing to
! the screen.
! Accepts: boolean
! Default value: true
URxvt.buffered: true

! Specifies the color depth (bits per pixel) used by urxvt.
! This can influence how colors are rendered and whether certain
! visual effects (like transparency or shading) are available.
!
! Common values include:
!   8   = 256 colors
!   16  = high-color (65k colors)
!   24  = truecolor (16.7M colors)
!   32  = truecolor with alpha channel
!
! Accepts: number
! Default value: 24 (truecolor)
!URxvt.depth:

! Selects the X11 visual type used when creating the window.
! This controls how pixel values are interpreted (direct color,
! indexed colormap, etc.). Normally left unspecified to use the
! server's default visual.
!
! Typical values: default, TrueColor, DirectColor, PseudoColor
!
! Accepts: string (e.g. default, TrueColor)
! Default value: default
!URxvt.visual:

! Sets the WM_TRANSIENT_FOR hint so this window is treated as a
! transient child of another top-level window. Useful for dialogs
! or when you want the window manager to keep windows grouped.
!
! Accepts: window id (hexadecimal), e.g. 0x3a00007
! Default value: none
!URxvt.transient-for:

! Bypasses the window manager and opens the terminal as an unmanaged,
! borderless window.
! When enabled, the window has no decorations (titlebar, borders), does
! not appear in taskbars or window switchers, and cannot be moved or
! resized by the window manager.
! Useful for kiosk or scratchpad-style terminals, lightweight popups, or
! embedding terminals inside other applications.
! So, for our daily and common usage, setting this option to true is not
! what we want. DO NOT CHANGE IT TO TRUE.
! Accepts: boolean
! Default value: false
URxvt.override-redirect: false

! Keeps the terminal window open after the child process (shell
! or command) exits, instead of closing immediately. Handy for
! inspecting program output before the window disappears.
!
! Accepts: boolean
! Default value: false
!URxvt.hold:

! Set MWM hints to request a borderless window, i.e. if honoured by the WM,
! the rxvt-unicode window will not have window decorations.
! Accepts: boolean
! Default value: false
URxvt.borderLess: false

! Specifies the number of pixesl between the characters and the window border.
! Accepts: number
! Default value: 2
URxvt.internalBorder: 2

! Specifies the number of pixels of the terminal external border.
! Accepts: number
! Default value: 0
URxvt.externalBorder: 0

! <<< Window & Borders }}}

! >>> ISO14755 (Unicode input) {{{
! ================================

! Controls urxvt’s built-in support for the ISO 14755 method of entering
! Unicode characters. When enabled, urxvt itself intercepts Ctrl+Shift+u
! and allows the user to type a hexadecimal Unicode code point, which is
! then inserted at the cursor position.
!
! Note: On many systems, Ctrl+Shift+u also works even if this option is
! disabled, because the global input method framework (e.g., ibus or GTK
! input handling) implements its own Unicode entry. In that case, urxvt
! simply receives the character produced by the input method.
!
! Common conflict: Users who rely on Ctrl+Shift+C and Ctrl+Shift+V for
! clipboard copy/paste often disable this option to avoid clashes.
! Accepts: boolean
! Default value: true
URxvt.iso14755: false

! https://unix.stackexchange.com/questions/444773/how-to-disable-the-ctrlshift-binding-iso-14755-in-urxvt

! Enables the Section 5.2 lookup feature of the ISO 14755 standard. When
! enabled, pressing Ctrl+Shift while pointing with the mouse queries the
! character under the cursor and displays its Unicode code point.
! If iso14755 is disabled, this setting has no effect.
! Accepts: boolean
! Default value: true
URxvt.iso14755_52: false

! <<< ISO14755 (Unicode input) }}}

! >>> Scrollbar {{{
! =================

! Specifies whether or not the scrollbar should be displayed.
! Accepts: boolean
! Default value: true
URxvt.scrollBar: false

! Specifies whether or not the scrollbar should be displayed on
! the right rather than the left.
! Accepts: boolean
! Default value: false
URxvt.scrollBar_right: false

! Displays rxvt (non XTerm/NeXT) scrollbar without (true value)/
! with (false value) a trough.
! Accepts: boolean
! Default value: false
URxvt.scrollBar_floating: false

! Aligns the top, bottom or centre of the scrollbar thumb with the pointer
! on middle button press/drag.
! Accepts: mode
! Default value: centre
URxvt.scrollBar_align: centre

! Specifies the style to be used for the scrollbar.
! Accepts: mode
! Choices: rxvt, plain, next or xterm
! Default value: rxvt
URxvt.scrollstyle: plain

! Specifies the width in pixels of the scrollbar.
! Accepts: number
! Default value: 5
URxvt.thickness: 5

! Specifies whether or not output to the terminal should automatically
! cause the scrollbar to go to the bottom of the scrolling region.
! Accepts: boolean
! Default value: true
URxvt.scrollTtyOutput: false

! Specifies whether or not pressing a key should automatically
! cause the scrollbar to go to the bottom of the scrolling region.
! Accepts: boolean
! Default value: false
URxvt.scrollTtyKeypress: true

! Enables smooth scrolling through the scrollback buffer of the terminal,
! even while new output is being written to the screen.
! When this option is enabled, using the mouse wheel, touchpad, or scrollbar
! allows you to move the visible area of the scrollback buffer without being
! interrupted by new output. This makes it easier to review logs, command
! history, or previous output while the terminal remains active.
!
! If disabled (the default), the visible region may be shifted by new
! output — especially when scrollTtyOutput is also enabled — making it
! harder to inspect previous output during periods of heavy terminal activity.
! Accepts: boolean
! Default: false
URxvt.scrollWithBuffer: true

! <<< Scrollbar }}}

! >>> Cursor & Pointer {{{
! ========================

! Specifies whether to make the cursor underlined or a box.
! Accepts: boolean
! Default value: false
URxvt.cursorUnderline: false

! Specifies whether to make the cursor blink.
! Accepts: boolean
! Default value: false
URxvt.cursorBlink: false

! Hides the mouse pointer when a key is pressed or after a short period of
! inactivity.
! The pointer reappears automatically on mouse movement.
! Accepts: boolean
! Default value: false
URxvt.pointerBlank: false

! Specifies how long (in seconds) the mouse pointer remains visible when
! idle before being hidden.
! Only takes effect if pointerBlank is enabled.
! Accepts: number
! Default value: 2
URxvt.pointerBlankDelay: 2

! <<< Cursor & Pointer }}}

! >>> Core {{{
! =============

! Specifies the terminal type name to be set in the TERM environment variable.
! Accepts: string
URxvt.termName: rxvt-unicode-256color

! Specifies the preferred size of this X window.
! Accepts: string
! Default value: 80x24
URxvt.geometry: 80x24

! Sets the working directory that urxvt should start in.
! If not specified, urxvt inherits the current shell's
! working directory when launched.
! Accepts: string (path to directory)
! Default value: (none)
!URxvt.chdir: /path/to/start/directory

! Specifies whether or not reverse video should be simulated.
! Accepts: boolean
! Default: false
URxvt.reverseVideo: false

! Specifies whether or not the shell to be run in the window
! should be started as a login shell by prepending a `-' to
! argv[0] of the shell.
! Accepts: boolean
! Default value: false
URxvt.loginShell: false

! Specifies the maximum time (in milliseconds) between successive mouse
! clicks.
! Accepts: number
! Default value: 500
URxvt.multiClickTime: 500

! Enables or disables jump scrolling, which improves performance by batching
! multiple lines of output into a single scroll update, rather than redrawing
! line by line. This can make fast-scrolling applications (like compilers or
! logs) appear smoother.
! When disabled, urxvt updates the screen for each new line of output.
! Accepts: boolean
! Default value: false
URxvt.jumpScroll: true

! When enabled, suppresses screen updates entirely while output is being
! received, only redrawing once the output stops. This can drastically
! improve performance when large volumes of text are printed quickly
! (e.g. compiling code).
! Note: This is more aggressive than jumpScroll and may cause visible
! delays in rendering until output pauses.
! Accepts: boolean
! Default value: true
URxvt.skipScroll: false

! True: store tabs as wide characters. False: interpret tabs as cursor
! movement only.
! Accepts: boolean
! Default value: true
URxvt.pastableTabs: true

! <<< Core }}}

! >>> Bell & Alerts {{{
! =====================

! Enables or disables automatic de-iconification of the terminal window
! if a bell character is received while it is iconified (minimized).
! Useful for drawing attention to important activity when the terminal
! is not currently visible.
! Accepts: boolean
! Default value: false
URxvt.mapAlert: false

! Sets/unsets the urgency hint of the window for the wm when the terminal
! receives a bell character.
! Accepts: boolean
! Default value: false
URxvt.urgentOnBell: false

! Enables or disables a visual flash when the terminal receives a bell
! character, instead of playing a sound.
! Accepts: boolean
! Default value: false
URxvt.visualBell: false

! External command to execute when the terminal bell is triggered.
! This allows replacing or supplementing the default visual or
! audible bell with a custom action (e.g. playing a sound,
! sending a desktop notification, or logging the event).
!
! Accepts: string (command line to execute)
! Default value: (none) – no external command is run
! Example:
!   URxvt.bell-command: paplay /usr/share/sounds/freedesktop/stereo/bell.oga
!
! Note: If set, this runs in addition to other bell mechanisms
! (visualBell, urgentOnBell).
!URxvt.bell-command:

! <<< Bell & Alerts }}}

! Enables or disables switching to the secondary screen buffer when an
! alternate screen is requested.
! Needed for full-screen terminal programs like text editors (e.g., emacs)
! to use a separate scrollback buffer.
! Accepts: boolean
! Default value: true
URxvt.secondaryScreen: true

! Enables or disables scrollback in the secondary screen buffer.
! Useful if you want to use the scrollback history while running full-screen
! programs like Emacs.
! Accepts: boolean
! Default value: true
URxvt.secondaryScroll: true

! >>> Input / Keyboard {{{
! ========================

! Defines the character sent when the Backspace key is pressed.
! When set to DEC (or left unset), sends DEL (`^?`, ASCII 127); with Ctrl,
! sends BS (`^H`, ASCII 8).
! When set to BS, this behavior is reversed.
! Useful for matching terminal behavior with shell or application
! expectations (e.g. bash, Emacs).
! Accepts: string
! Default value: DEC
URxvt.backspacekey: DEC

! Defines the string sent when the Delete key (not the keypad Delete) is
! pressed.
! Common settings:
!   \033[3~ — Sends the standard ANSI escape sequence (ESC [ 3 ~), used by
!             most modern terminal applications.
!             This matches the current behavior of the Delete key in many
!             setups.
!   \177 or \x7f — Sends the ASCII DEL character (decimal 127,
!                  caret notation ^?), used by some legacy applications.
!
! If unset, urxvt may send a legacy sequence associated with the
! Execute key, which is rarely useful.
!
! Use \033[3~ for broad compatibility, or \177 if a program specifically
! requires the ASCII DEL character.
! Accepts: string
! Default value: \033[3~
URxvt.deletekey: \033[3~

! Enables or disables sending an ESC prefix when the Meta (usually Alt)
! key is pressed, instead of setting the 8th bit of the character.
! Useful in UTF-8 environments where setting the 8th bit may interfere
! with multibyte characters.
! Accepts: boolean
! Default value: false
URxvt.meta8: false

! Specifies the string urxvt sends in response to the ENQ (Enquiry) control
! character, which is ASCII code 0x05 (pressing Ctrl-E or by writing \005).
! This mechanism, a legacy feature from early terminal systems, known as
! answerback, allows applications to identify or interact with the terminal
! by requesting an "answer back" string and was traditionally used by
! terminals to identify themselves to host systems or software.
!
! If unset, urxvt defaults to sending \033[?1;2c, a standard
! Device Attributes (DA) response and it follows the format defined by
! DEC VT-series terminals. Here's how to interpret it:
!
! - \033[ — Control Sequence Introducer (CSI)
! - ?1 — Identifies the terminal as a VT100 with advanced options
! - ;2 — Indicates the presence of a printer port (optional, historically)
! - c — Terminates the DA response
!
! So together, ESC [ ?1;2c says:
!   "I am a VT100 terminal (DEC-style), with printer port support."
!
! Why does urxvt send this?
!
! urxvt is emulating xterm, which itself emulates a DEC VT100-compatible
! terminal. Many applications (especially older ones or terminal-based
! programs) may send ENQ or a DA request (ESC [ c) to determine what kind
! of terminal they're dealing with.
!
! By replying with \033[?1;2c, urxvt:
!
! - Maintains compatibility with legacy software that expects a known response
! - Identifies itself as a DEC-style terminal, which is widely understood
! - Avoids exposing user-specific info (unlike a custom answerbackString)
!
! Unless you have a specific reason, it's generally best to leave this option
! unset or to use similarly innocuous sequences.
!
! Accepts: string
! Default value: \033[?1;2c
URxvt.answerbackString: \033[?1;2c

! Defines additional characters that should be treated as word separators
! when performing double-click selection in the terminal. When you
! double-click on a word, urxvt determines its boundaries by using spaces,
! punctuation, and the characters specified in cutchars.
!
! By customizing this list, you control which characters stop the selection.
! This can be useful when working with programming languages, command-line
! output, or URLs.
! Accepts: string
! Default value: "\"&'()*,;<=>?@[\\]^`{|}"
URxvt.cutchars: "\"&'()*,;<=>?@[\\]^`{|}"

! Override detection of Meta modifier with specified key: alt, meta, hyper,
! super, mod1, mod2, mod3, mod4, mod5.
! Accepts: modifier
! Default value: alt
URxvt.modifier: alt

! Rebinds copy/paste to match GNOME Terminal convention.
! Ctrl+Shift+C copies to the clipboard, Ctrl+Shift+V pastes from the
! clipboard.
URxvt.keysym.Control-Shift-C: eval:selection_to_clipboard
URxvt.keysym.Control-Shift-V: eval:paste_clipboard

! Defines a global hotkey to toggle urxvt in "Kuake mode"
! (drop-down terminal style, similar to the Quake console).
! Only effective if urxvt is built with Kuake support.
! Accepts: string (key combination, e.g. Control+Shift+F12)
! Default value: (none)
!URxvt.kuake.hotkey:

! <<< Input / Keyboard }}}

! >>> Transparency & Background {{{
! =================================

! Inherit the background pixmap of the root window instead of drawing
! a separate background. This can be useful when a desktop wallpaper
! manager sets the background at the root level and you want urxvt
! to blend with it.
! Accepts: boolean
! Default value: false
!URxvt.inheritPixmap: false

! Enables a transparent terminal background that allows the root window
! (or desktop background image) to show through.
! Requires a compositor (like picom, compton, or xcompmgr) for true
! transparency; otherwise, shows the background image beneath.
! This creates the effect of a translucent terminal. Often used for
! aesthetic setups.
! Accepts: boolean
! Default value: false
URxvt.transparent: false

! Tint the transparent background with the given colour.
! Accepts: color
! Default value: BRIGHT_WHITE
URxvt.tintColor: BRIGHT_WHITE

! Darken (0 .. 99) or lighten (101 .. 200) the transparent background.
! A value of 100 means no shading.
! Accepts: number
! Default value: 100
URxvt.shading: 100

! Apply gaussian blur with the specified radius to the transparent background.
! Accepts: HxV
! Default value: 0
URxvt.blurRadius: 0

! Fade the text by the given percentage when focus is lost.
! Accepts: number
! Default value: 0
URxvt.fading: 0

! Fade to this colour, when fading is used.
! Accepts: color
! Default value: BLACK
URxvt.fadeColor: BLACK

! Sets a pixmap (image file) to be used as the terminal background.
! The file path must point to a valid X11-supported image format.
! Depending on your system, additional utilities may be required
! (e.g. `xrdb` settings or external loaders).
! Accepts: string (path to image file)
! Default value: none
!URxvt.backgroundPixmap: /path/to/image.xpm

! Sets the border width (in pixels) used when drawing the background
! pixmap. This affects how the background image is tiled or aligned
! within the terminal window.
! Accepts: integer (pixel value)
! Default value: 0
!URxvt.background.border: 2

! Defines an expression for dynamically generating or transforming
! the terminal background. This is an advanced option intended for
! users who want to compute backgrounds based on functions rather
! than using static images or colors.
! Accepts: string (expression syntax is rarely used and may depend
! on external patches or extensions)
! Default value: none
!URxvt.background.expr: some_expression

! Internal resource related to urxvt’s background rendering.
! Rarely configured directly by users; mostly intended for
! debugging or development purposes.
! Accepts: boolean
! Default value: false
!URxvt.background.internal: false

! <<< Transparency & Background }}}

! >>> Internationalization (IME) {{{
! ==================================

! Input method settings (needed only for IME, e.g. IBus, SCIM, XIM).
! Currently not configured since Latin script input is sufficient.
!
! Note: IME options (inputMethod, preeditType, imLocale) are for
! enabling external input methods (e.g. IBus, SCIM, fcitx) used
! mainly for CJK (Chinese, Japanese, or Korean) input. This is
! different from Ctrl+Shift+u, which is an X input shortcut to
! enter arbitrary Unicode code points (e.g. Greek, Cyrillic, Hebrew)
! and does not depend on urxvt IME settings.

!URxvt.inputMethod: ibus
!URxvt.preeditType: OverTheSpot
!URxvt.imLocale: ja_JP.UTF-8

! <<< Internationalization (IME) }}}

! >>> Perl Extensions {{{
! =======================
!
! urxvt supports small helper scripts called Perl extensions. They add
! features like improved selection, menus, or integration with external
! tools. By default, if perl-ext-common is not set explicitly, urxvt loads
! the following extensions:
!
! - default : basic setup needed for extensions
! - selection : enhanced text selection behavior
! - option-popup : right-click menu for options
! - readline : readline-style editing in input fields
!
! Other useful extensions (e.g. clipboard, matcher) will be added later
! for extra functionality.

! Add directories for custom scripts (not used yet)
!URxvt.perl-lib: /home/you/.urxvt/ext

! Evaluate Perl code at startup (not used)
!URxvt.perl-eval:

! Load common Perl extensions
URxvt.perl-ext-common: default,selection,option-popup,readline,matcher

! Per-instance extension overrides (not configured)
!URxvt.perl-ext:

! <<< Perl Extensions }}}

! >>> URL / Matcher {{{
! =====================
!
! urxvt’s matcher extension highlights and makes URLs
! clickable inside the terminal. You can configure which
! button activates them, what launcher is used, add custom
! patterns, and even style the matches visually.

! Mouse button to open matched URLs (default: 1 = left click)
URxvt.matcher.button: 1

! Program to launch URLs
URxvt.matcher.launcher: firefox

! Per-scheme launchers
URxvt.matcher.launcher.http: firefox
URxvt.matcher.launcher.https: firefox
URxvt.matcher.launcher.mailto: thunderbird

! Add custom regex patterns (example: Git commit hashes)
URxvt.matcher.pattern.1: \b[0-9a-f]{7,40}\b

! Visual style for matches (e.g., underline + bold)
URxvt.matcher.rend.0: Uline Bold

! Legacy option, alias for matcher.launcher
!URxvt.url-launcher: firefox

! <<< URL / Matcher }}}

! >>> Remote Clipboard {{{
! ========================
!
! urxvt can integrate with remote clipboards by running
! external commands. This is most useful when working over
! SSH and you want copy/paste to bridge between machines.
!
! remote-clipboard.fetch : command to fetch clipboard
! remote-clipboard.store : command to store clipboard
!
! Example (using xsel locally):
!   URxvt.remote-clipboard.fetch:  xsel -o -b
!   URxvt.remote-clipboard.store:  xsel -i -b
!
! Note: local clipboard copy/paste is already available
! via the 'selection' extension (enabled by default),
! even without the 'clipboard' extension. Remote clipboard
! options are left unconfigured for now.
!
!URxvt.remote-clipboard.fetch: not configured yet
!URxvt.remote-clipboard.store: not configured yet
!
! <<< Remote Clipboard }}}

! >>> Selection & Clipboard {{{
! =============================
!
! urxvt supports advanced selection and clipboard features.
! In addition to the standard copy/paste behavior (already
! mapped to Ctrl+Shift+C/V), thnese options allow custom
! transformations, pastebin integration, and regex-based
! selection matching.
!
! selection-autotransform.* : rules to automatically transform
!                             selected text (e.g., lowercase,
!                             strip whitespace, etc.)
!
! selection-pastebin.cmd    : command to upload selection
!                             to a pastebin service (not set)
!
! selection-pastebin.url    : URL template for the pastebin
!                             service (not set)
!
! selection.pattern-0       : regex defining what count as a "word"
!                             when selecting (not set)
!
! <<< Selection & Clipboard }}}

! >>> Misc {{{
! ============
!
! Miscellaneous urxvt options that don’t fit in other sections.
! Some improve usability (mouse scrolling, triple-click behavior),
! others affect security, printing, or environment handling.

! Directory list for searching configuration files and resources.
! Useful if you want urxvt to look for additional config fragments
! or resources outside the default paths.
! Accepts: colon-separated list of directories
! Default value: (compiled-in, usually /usr/lib/urxvt:/usr/local/lib/urxvt)
!URxvt.path:

! Enables or disables potentially unsafe features like loading Perl
! extensions from user-writable directories and escape sequences that
! echo strings.
! Should be disabled for security, especially on multi-user systems.
! Accepts: boolean
! Default value: false
URxvt.insecure: false

! Controls whether or not the terminal will update the utmp database
! when a new terminal session is started. In other words, setting to
! true prevents urxvt from making an entry in the utmp file.
! Accepts: boolean
! Default value: false
URxvt.utmpInhibit: false

! Enables or disables scrolling by a full page when using the mouse wheel.
! When disabled, the mouse wheel scrolls five lines per notch instead of
! a full page.
! Accepts: boolean
! Default value: false
URxvt.mouseWheelScrollPage: false

! Changes triple-click selection to stop at the end of a logical line
! instead of selecting the full physical line.
! Useful for selecting long shell commands or wrapped output without
! grabbing the next prompt.
! Accepts: boolean
! Default value: false
URxvt.tripleclickwords: false

! Specify a command pipe for vt100 printer.
! Accepts: string
! Default value: lpr
URxvt.print-pipe: lpr

! Adds extra X resources, overriding or complementing those loaded
! from ~/.Xresources or the system database.
! Useful for testing or per-instance tweaks without modifying global files.
! Accepts: string (X resource entries)
! Default value: unset
!URxvt.xrm:

! <<< Misc }}}

!termName:                       string
!geometry:                       geometry
!chdir:                          string
!reverseVideo:                   boolean
!loginShell:                     boolean
!multiClickTime:                 number
!jumpScroll:                     boolean
!skipScroll:                     boolean
!pastableTabs:                   boolean
!scrollstyle:                    mode
!scrollBar:                      boolean
!scrollBar_right:                boolean
!scrollBar_floating:             boolean
!scrollBar_align:                mode
!thickness:                      number
!scrollTtyOutput:                boolean
!scrollTtyKeypress:              boolean
!scrollWithBuffer:               boolean
!inheritPixmap:                  boolean
!transparent:                    boolean
!tintColor:                      color
!shading:                        number
!blurRadius:                     HxV
!fading:                         number
!fadeColor:                      color
!utmpInhibit:                    boolean
!urgentOnBell:                   boolean
!visualBell:                     boolean
!mapAlert:                       boolean
!meta8:                          boolean
!mouseWheelScrollPage:           boolean
!tripleclickwords:               boolean
!insecure:                       boolean
!cursorUnderline:                boolean
!cursorBlink:                    boolean
!pointerBlank:                   boolean
!background:                     color
!foreground:                     color
!color0:                         color
!color1:                         color
!color2:                         color
!color3:                         color
!color4:                         color
!color5:                         color
!color6:                         color
!color7:                         color
!color8:                         color
!color9:                         color
!color10:                        color
!color11:                        color
!color12:                        color
!color13:                        color
!color14:                        color
!color15:                        color
!colorBD:                        color
!colorIT:                        color
!colorUL:                        color
!colorRV:                        color
!underlineColor:                 color
!scrollColor:                    color
!troughColor:                    color
!highlightColor:                 color
!highlightTextColor:             color
!cursorColor:                    color
!cursorColor2:                   color
!pointerColor:                   color
!pointerColor2:                  color
!borderColor:                    color
!path:                           search path
!backgroundPixmap:               file[;geom]
!iconFile:                       file
!font:                           fontname
!boldFont:                       fontname
!italicFont:                     fontname
!boldItalicFont:                 fontname
!intensityStyles:                boolean
!inputMethod:                    name
!preeditType:                    style
!imLocale:                       string
!imFont:                         fontname
!title:                          string
!iconName:                       string
!saveLines:                      number
!buffered:                       boolean
!depth:                          number
!visual:                         number
!transient-for:                  windowid
!override-redirect:              boolean
!hold:                           boolean
!externalBorder:                 number
!internalBorder:                 number
!borderLess:                     boolean
!lineSpace:                      number
!letterSpace:                    number
!skipBuiltinGlyphs:              boolean
!pointerBlankDelay:              number
!backspacekey:                   string
!deletekey:                      string
!print-pipe:                     string
!modifier:                       modifier
!cutchars:                       string
!answerbackString:               string
!secondaryScreen:                boolean
!secondaryScroll:                boolean
!perl-lib:                       string
!perl-eval:                      perl-eval
!perl-ext-common:                string
!perl-ext:                       string
!iso14755:                       boolean
!iso14755_52:                    boolean
!xrm:                            string
!keysym.sym:                     keysym
!background.border:              boolean
!background.expr:                string
!background.interval:            seconds
!bell-command:                   string
!kuake.hotkey:                   string
!matcher.button:                 string
!matcher.launcher:               string
!matcher.launcher.*:             string
!matcher.pattern.*:              string
!matcher.rend.*:                 string
!remote-clipboard.fetch:         string
!remote-clipboard.store:         string
!searchable-scrollback:          string
!selection-autotransform.*:      string
!selection-pastebin.cmd:         string
!selection-pastebin.url:         string
!selection.pattern-0:            string
!tab-bg:                         colour
!tab-fg:                         colour
!tabbar-bg:                      colour
!tabbar-fg:                      colour
!url-launcher:                   string
